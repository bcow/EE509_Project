{
    "contents" : "library(\"rjags\")\nlibrary(coda)\nlibrary(mvtnorm)\nlibrary(nnet)\n\nglopnet <- read.csv(\"glopnet.csv\")\nglopnet[c(\"X\")] <- NULL\nglopnet[c(\"X.1\")] <- NULL\nglopnet[c(\"X.2\")] <- NULL\nglopnet[c(\"X.3\")] <- NULL\n\nDSI <- as.numeric(glopnet$Dataset)\n\ngdata.na <- as.data.frame(cbind(\n  glopnet$log.LL,\n  glopnet$log.LMA,\n  glopnet$log.Amass,\n  glopnet$log.Nmass,\n  glopnet$log.Pmass,\n  glopnet$log.Rdmass \n  #   glopnet$Species, \n  #   glopnet$BIOME,\n  #   glopnet$Dataset\n))\ncolnames(gdata.na)<-c(\"Log.LL\",\"Log.LMA\",\"Log.Amass\",\"Log.Nmass\",\"Log.Pmass\",\"Log.Rmass\")\ngdata <- na.omit(gdata.na)\n\nMultModel = \"\nmodel{\n  prec.Sigma~dwish(Vsig[,],n)\n  Sigma[1:n,1:n] <- inverse(prec.Sigma[,])\n  \n  mu[1:n]~dmnorm(mu0[],Vmu)\n  \n  for(i in 1:N){\n    Y[i,1:n]~dmnorm(mu[],prec.Sigma[,])\n    for(j in 1:n){\n      X[i,j]~dnorm(Y[i,j],10000000)\n    }\n  }\n}\"\n\n# Without na's \nj.data <- gdata\nN=dim(j.data)[1]; n=dim(j.data)[2]\ndata = list(Y=j.data, N=N, n=n, Vsig = diag(n), mu0 = rep(0,n), Vmu = diag(.001,n))\ninit = NULL\nj.model   <- jags.model (file = textConnection(MultModel),data = data,inits = init,n.chains = 3)\n# update(j.model, n.iter=1000)\n# j.out   <- coda.samples (model = j.model,variable.names= c(\"mu\"),n.iter = 10000)\n# out2 = j.out\n\n\n# With na's \n\nj.data <- gdata.na\nN=dim(j.data)[1]; n=dim(j.data)[2]\ndata = list(X=j.data, N=N, n=n, Vsig = diag(n), mu0 = rep(0,n), Vmu = diag(.001,n))\ninit = NULL\nj.model   <- jags.model (file = textConnection(MultModel), data = data, inits = init, n.chains = 3)\n# update(j.model, n.iter=1000)\n# j.out   <- coda.samples (model = j.model, variable.names= c(\"mu\"), n.iter = 10000)\n# out4 = j.out\n\n\nRandMultModel = \"\nmodel{\n  prec.Sigma~dwish(Vsig[,],n)                   # precision\n  Sigma[1:n,1:n] <- inverse(prec.Sigma[,])      # variance\n\n  for(i in 1:nds){alpha.ds[i]~dnorm(0,tau.d)}   # random effect drawn form normal distribution centered at 0\n  tau.d~dgamma(.001,.001)                       # with variance tau.d\n\n  for(i in 1:N){                  # create matrix of random effects \n    for(j in 1:n){\n      a[i,j] <- alpha.ds[DSI[i]]\n    }\n  }\n\n  beta[1:n]~dmnorm(mu0[],Vmu)     # multivariate step\n\n  for(i in 1:N){mu[i,1:n] <- beta[1:n]+a[i,1:n]}\n\n\n  for(i in 1:N){\n    Y[i,1:n]~dmnorm(mu[i,1:n],prec.Sigma[,])\n    for(j in 1:n){\n      X[i,j]~dnorm(Y[i,j],10000000)\n    }\n  }\n}\"\n\n# Without na's \nj.data <- gdata.na\nN=dim(j.data)[1]; n=dim(j.data)[2]; nds = length(unique(DSI))\ndata = list(Y=j.data, N=N, n=n, nds=nds, DSI=DSI, Vsig = diag(n), mu0 = rep(0,n), Vmu = diag(.001,n))\ninit = NULL\nj.model   <- jags.model (file = textConnection(RandMultModel),data = data,inits = init,n.chains = 3)\n# update(j.model, n.iter=1000)\n# j.out   <- coda.samples (model = j.model,variable.names= c(\"mu\"),n.iter = 10000)\n# out = j.out\n\n\n# With na's \n\nj.data <- gdata.na\nDSI <- class.ind(j.data$Dataset)\nj.data$Dataset <- NULL\nN=dim(j.data)[1]; n=dim(j.data)[2]; nds = dim(DSI)[2]\ndata = list(Y=j.data, N=N, n=n, nds=nds, DSI=DSI, Vsig = diag(n), mu0 = rep(0,n), Vmu = diag(.001,n))\ninit = NULL\nj.model   <- jags.model (file = textConnection(RandMultModel), data = data, inits = init, n.chains = 3)\n\nupdate(j.model, n.iter=1000)\nj.out   <- coda.samples (model = j.model, variable.names= c(\"mu\"), n.iter = 10000)\nout4 = j.out\n\nout2.df <- as.data.frame(as.matrix(out2))\nout4.df <- as.data.frame(as.matrix(out4))\n\ncolnames(out2.df)<-colnames(out4.df)<-colnames(gdata)\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1418581906120.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1375953833",
    "id" : "4E92AA6A",
    "lastKnownWriteTime" : 1418582128,
    "path" : "~/R Projects/EE509_Project/random_effects.R",
    "project_path" : "random_effects.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}